// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

generator docker {
  provider = "prisma-client-js"
  output   = ".output/server/node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id
  sessions  Session[]
  name      String
  admin     Boolean     @default(false)
  Photo     Photo[]
  OAuthUser OAuthUser[]

  @@map("users")
}

model OAuthUser {
  user_id       String
  oauthId       String @db.VarChar(255)
  oauthProvider String @db.VarChar(255)
  user          User   @relation(fields: [user_id], references: [id])

  @@id([user_id, oauthProvider])
  @@map("oauth_users")
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)

  @@map("sessions")
}

model Event {
  id         Int      @id @default(autoincrement())
  name       String
  startAt    DateTime
  endAt      DateTime
  photos     Photo[]
  photoLimit Int      @default(25)

  @@map("events")
}

model Photo {
  id       Int    @id @default(autoincrement())
  url      String
  user_id  String
  event_id Int
  event    Event  @relation(fields: [event_id], references: [id])
  user     User   @relation(fields: [user_id], references: [id])

  @@map("photos")
}
